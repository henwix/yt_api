openapi: 3.0.3
info:
  title: YT Pet Project API
  version: 1.0.0
  description: API Description
paths:
  /api/v1/auth/users/:
    get:
      operationId: api_v1_auth_users_list
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomUser'
          description: ''
    post:
      operationId: api_v1_auth_users_create
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUserCreate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserCreate'
          description: ''
  /api/v1/auth/users/{id}/:
    get:
      operationId: api_v1_auth_users_retrieve
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    put:
      operationId: api_v1_auth_users_update
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    patch:
      operationId: api_v1_auth_users_partial_update
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    delete:
      operationId: api_v1_auth_users_destroy
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/auth/users/activation/:
    post:
      operationId: api_v1_auth_users_activation_create
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /api/v1/auth/users/me/:
    get:
      operationId: api_v1_auth_users_me_retrieve
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    put:
      operationId: api_v1_auth_users_me_update
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    patch:
      operationId: api_v1_auth_users_me_partial_update
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    delete:
      operationId: api_v1_auth_users_me_destroy
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/auth/users/resend_activation/:
    post:
      operationId: api_v1_auth_users_resend_activation_create
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/auth/users/reset_password/:
    post:
      operationId: api_v1_auth_users_reset_password_create
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/auth/users/reset_password_confirm/:
    post:
      operationId: api_v1_auth_users_reset_password_confirm_create
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/v1/auth/users/reset_username/:
    post:
      operationId: api_v1_auth_users_reset_username_create
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/auth/users/reset_username_confirm/:
    post:
      operationId: api_v1_auth_users_reset_username_confirm_create
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /api/v1/auth/users/set_password/:
    post:
      operationId: api_v1_auth_users_set_password_create
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /api/v1/auth/users/set_username/:
    post:
      operationId: api_v1_auth_users_set_username_create
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /api/v1/c/{slug}:
    get:
      operationId: api_v1_c_retrieve
      description: |-
        API endpoint to get channel main page. Main page includes info about channel and last public 5 videos.
        Example: /api/v1/c/henwixchannel
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelAndVideos'
          description: ''
  /api/v1/c/{slug}/about/:
    get:
      operationId: api_v1_c_about_retrieve
      description: |-
        API endpoint to get info about channel.
        Supports caching. Cache available in 15 minutes.
        Example: /api/v1/c/henwixchannel/about/
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelAbout'
          description: ''
  /api/v1/channel/:
    get:
      operationId: api_v1_channel_retrieve
      description: |-
        API endpoint for detail, update and delete 'Channel' instances.
        If the request method is DELETE, related/associated 'User' will also be deleted.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
    put:
      operationId: api_v1_channel_update
      description: |-
        API endpoint for detail, update and delete 'Channel' instances.
        If the request method is DELETE, related/associated 'User' will also be deleted.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Channel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Channel'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
    patch:
      operationId: api_v1_channel_partial_update
      description: |-
        API endpoint for detail, update and delete 'Channel' instances.
        If the request method is DELETE, related/associated 'User' will also be deleted.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChannel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChannel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChannel'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
    delete:
      operationId: api_v1_channel_destroy
      description: |-
        API endpoint for detail, update and delete 'Channel' instances.
        If the request method is DELETE, related/associated 'User' will also be deleted.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/token/:
    post:
      operationId: api_v1_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v1/token/refresh/:
    post:
      operationId: api_v1_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/token/verify/:
    post:
      operationId: api_v1_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/v1/video/:
    get:
      operationId: api_v1_video_list
      description: |-
        API endpoint for listing, retrieving, creating, editing and deleting 'Video' instances.
        Supports searching by 'name', 'description', 'author__name', 'author__slug' fields.
        Returns nothing if 'search' query-param was not provided - '?search' param for listing is required.
        Example: api/v1/video?search=airplane
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVideoPreviewList'
          description: ''
    post:
      operationId: api_v1_video_create
      description: |-
        API endpoint for listing, retrieving, creating, editing and deleting 'Video' instances.
        Supports searching by 'name', 'description', 'author__name', 'author__slug' fields.
        Returns nothing if 'search' query-param was not provided - '?search' param for listing is required.
        Example: api/v1/video?search=airplane
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Video'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Video'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
  /api/v1/video/{video_id}/:
    get:
      operationId: api_v1_video_retrieve
      description: |-
        API endpoint for listing, retrieving, creating, editing and deleting 'Video' instances.
        Supports searching by 'name', 'description', 'author__name', 'author__slug' fields.
        Returns nothing if 'search' query-param was not provided - '?search' param for listing is required.
        Example: api/v1/video?search=airplane
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    put:
      operationId: api_v1_video_update
      description: |-
        API endpoint for listing, retrieving, creating, editing and deleting 'Video' instances.
        Supports searching by 'name', 'description', 'author__name', 'author__slug' fields.
        Returns nothing if 'search' query-param was not provided - '?search' param for listing is required.
        Example: api/v1/video?search=airplane
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Video'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Video'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    patch:
      operationId: api_v1_video_partial_update
      description: |-
        API endpoint for listing, retrieving, creating, editing and deleting 'Video' instances.
        Supports searching by 'name', 'description', 'author__name', 'author__slug' fields.
        Returns nothing if 'search' query-param was not provided - '?search' param for listing is required.
        Example: api/v1/video?search=airplane
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVideo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVideo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVideo'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    delete:
      operationId: api_v1_video_destroy
      description: |-
        API endpoint for listing, retrieving, creating, editing and deleting 'Video' instances.
        Supports searching by 'name', 'description', 'author__name', 'author__slug' fields.
        Returns nothing if 'search' query-param was not provided - '?search' param for listing is required.
        Example: api/v1/video?search=airplane
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/video/{video_id}/like/:
    post:
      operationId: api_v1_video_like_create
      description: |-
        API endpoint for 'likes' and 'dislikes' actions.
        'POST' and 'DELETE' methods are available for setting 'likes'/'dislikes' and removing them.

        POST: Only one field can be provided: 'is_like' - true by default and means like, but false - dislike.
        DELETE: Have no required fields.
        Related video determines by 'video_id' query-param.

        Example: http://127.0.0.1:8001/api/v1/video/JDcWD0w9aJD/like/
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Video'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Video'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    delete:
      operationId: api_v1_video_like_destroy
      description: |-
        API endpoint for 'likes' and 'dislikes' actions.
        'POST' and 'DELETE' methods are available for setting 'likes'/'dislikes' and removing them.

        POST: Only one field can be provided: 'is_like' - true by default and means like, but false - dislike.
        DELETE: Have no required fields.
        Related video determines by 'video_id' query-param.

        Example: http://127.0.0.1:8001/api/v1/video/JDcWD0w9aJD/like/
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/video/{video_id}/view/:
    post:
      operationId: api_v1_video_view_create
      description: |-
        API endpoint for adding views to videos.

        Have no required fields.
        Allows add a view if the previous one was more than 24 hours ago.

        Example: http://127.0.0.1:8001/api/v1/video/JDcWD0w9aJD/view/
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Video'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Video'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
  /api/v2/auth/users/:
    get:
      operationId: api_v2_auth_users_list
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomUser'
          description: ''
    post:
      operationId: api_v2_auth_users_create
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUserCreate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserCreate'
          description: ''
  /api/v2/auth/users/{id}/:
    get:
      operationId: api_v2_auth_users_retrieve
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    put:
      operationId: api_v2_auth_users_update
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    patch:
      operationId: api_v2_auth_users_partial_update
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    delete:
      operationId: api_v2_auth_users_destroy
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/auth/users/activation/:
    post:
      operationId: api_v2_auth_users_activation_create
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /api/v2/auth/users/me/:
    get:
      operationId: api_v2_auth_users_me_retrieve
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    put:
      operationId: api_v2_auth_users_me_update
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    patch:
      operationId: api_v2_auth_users_me_partial_update
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    delete:
      operationId: api_v2_auth_users_me_destroy
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/auth/users/resend_activation/:
    post:
      operationId: api_v2_auth_users_resend_activation_create
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v2/auth/users/reset_password/:
    post:
      operationId: api_v2_auth_users_reset_password_create
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v2/auth/users/reset_password_confirm/:
    post:
      operationId: api_v2_auth_users_reset_password_confirm_create
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/v2/auth/users/reset_username/:
    post:
      operationId: api_v2_auth_users_reset_username_create
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v2/auth/users/reset_username_confirm/:
    post:
      operationId: api_v2_auth_users_reset_username_confirm_create
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /api/v2/auth/users/set_password/:
    post:
      operationId: api_v2_auth_users_set_password_create
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /api/v2/auth/users/set_username/:
    post:
      operationId: api_v2_auth_users_set_username_create
      description: |-
        Customized UserViewSet from Djoser.
        prefetch_related('channel') has been added to queryset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /api/v2/c/{slug}:
    get:
      operationId: api_v2_c_retrieve
      description: |-
        API endpoint to get channel main page. Main page includes info about channel and last public 5 videos.
        Example: /api/v1/c/henwixchannel
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelAndVideos'
          description: ''
  /api/v2/c/{slug}/about/:
    get:
      operationId: api_v2_c_about_retrieve
      description: |-
        API endpoint to get info about channel.
        Supports caching. Cache available in 15 minutes.
        Example: /api/v1/c/henwixchannel/about/
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelAbout'
          description: ''
  /api/v2/channel/:
    get:
      operationId: api_v2_channel_retrieve
      description: |-
        API endpoint for detail, update and delete 'Channel' instances.
        If the request method is DELETE, related/associated 'User' will also be deleted.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
    put:
      operationId: api_v2_channel_update
      description: |-
        API endpoint for detail, update and delete 'Channel' instances.
        If the request method is DELETE, related/associated 'User' will also be deleted.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Channel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Channel'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
    patch:
      operationId: api_v2_channel_partial_update
      description: |-
        API endpoint for detail, update and delete 'Channel' instances.
        If the request method is DELETE, related/associated 'User' will also be deleted.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChannel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChannel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChannel'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
    delete:
      operationId: api_v2_channel_destroy
      description: |-
        API endpoint for detail, update and delete 'Channel' instances.
        If the request method is DELETE, related/associated 'User' will also be deleted.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/token/:
    post:
      operationId: api_v2_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v2/token/refresh/:
    post:
      operationId: api_v2_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v2/token/verify/:
    post:
      operationId: api_v2_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/v2/video/:
    get:
      operationId: api_v2_video_list
      description: |-
        API endpoint for listing, retrieving, creating, editing and deleting 'Video' instances.
        Supports searching by 'name', 'description', 'author__name', 'author__slug' fields.
        Returns nothing if 'search' query-param was not provided - '?search' param for listing is required.
        Example: api/v1/video?search=airplane
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVideoPreviewList'
          description: ''
    post:
      operationId: api_v2_video_create
      description: |-
        API endpoint for listing, retrieving, creating, editing and deleting 'Video' instances.
        Supports searching by 'name', 'description', 'author__name', 'author__slug' fields.
        Returns nothing if 'search' query-param was not provided - '?search' param for listing is required.
        Example: api/v1/video?search=airplane
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Video'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Video'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
  /api/v2/video/{video_id}/:
    get:
      operationId: api_v2_video_retrieve
      description: |-
        API endpoint for listing, retrieving, creating, editing and deleting 'Video' instances.
        Supports searching by 'name', 'description', 'author__name', 'author__slug' fields.
        Returns nothing if 'search' query-param was not provided - '?search' param for listing is required.
        Example: api/v1/video?search=airplane
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    put:
      operationId: api_v2_video_update
      description: |-
        API endpoint for listing, retrieving, creating, editing and deleting 'Video' instances.
        Supports searching by 'name', 'description', 'author__name', 'author__slug' fields.
        Returns nothing if 'search' query-param was not provided - '?search' param for listing is required.
        Example: api/v1/video?search=airplane
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Video'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Video'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    patch:
      operationId: api_v2_video_partial_update
      description: |-
        API endpoint for listing, retrieving, creating, editing and deleting 'Video' instances.
        Supports searching by 'name', 'description', 'author__name', 'author__slug' fields.
        Returns nothing if 'search' query-param was not provided - '?search' param for listing is required.
        Example: api/v1/video?search=airplane
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVideo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVideo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVideo'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    delete:
      operationId: api_v2_video_destroy
      description: |-
        API endpoint for listing, retrieving, creating, editing and deleting 'Video' instances.
        Supports searching by 'name', 'description', 'author__name', 'author__slug' fields.
        Returns nothing if 'search' query-param was not provided - '?search' param for listing is required.
        Example: api/v1/video?search=airplane
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/video/{video_id}/like/:
    post:
      operationId: api_v2_video_like_create
      description: |-
        API endpoint for 'likes' and 'dislikes' actions.
        'POST' and 'DELETE' methods are available for setting 'likes'/'dislikes' and removing them.

        POST: Only one field can be provided: 'is_like' - true by default and means like, but false - dislike.
        DELETE: Have no required fields.
        Related video determines by 'video_id' query-param.

        Example: http://127.0.0.1:8001/api/v1/video/JDcWD0w9aJD/like/
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Video'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Video'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    delete:
      operationId: api_v2_video_like_destroy
      description: |-
        API endpoint for 'likes' and 'dislikes' actions.
        'POST' and 'DELETE' methods are available for setting 'likes'/'dislikes' and removing them.

        POST: Only one field can be provided: 'is_like' - true by default and means like, but false - dislike.
        DELETE: Have no required fields.
        Related video determines by 'video_id' query-param.

        Example: http://127.0.0.1:8001/api/v1/video/JDcWD0w9aJD/like/
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/video/{video_id}/view/:
    post:
      operationId: api_v2_video_view_create
      description: |-
        API endpoint for adding views to videos.

        Have no required fields.
        Allows add a view if the previous one was more than 24 hours ago.

        Example: http://127.0.0.1:8001/api/v1/video/JDcWD0w9aJD/view/
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Video'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Video'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    Channel:
      type: object
      description: Channel serializer for user creation and detail endpoints.
      properties:
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 40
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        country:
          type: string
          maxLength: 40
      required:
      - country
    ChannelAbout:
      type: object
      description: Channel serializer for /about/ page.
      properties:
        description:
          type: string
        date_joined:
          type: string
          format: date-time
          readOnly: true
        country:
          type: string
          maxLength: 40
        channel_link:
          type: string
          format: uri
          readOnly: true
        total_views:
          type: integer
          readOnly: true
        total_videos:
          type: integer
          readOnly: true
        total_subs:
          type: integer
          readOnly: true
      required:
      - channel_link
      - country
      - date_joined
      - total_subs
      - total_videos
      - total_views
    ChannelAndVideos:
      type: object
      description: |-
        Channel serializer for detail endpoints with extra video field.
        Used in 'ChannelMainView'.
      properties:
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 40
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        country:
          type: string
          maxLength: 40
        videos:
          type: array
          items:
            $ref: '#/components/schemas/VideoPreview'
          readOnly: true
      required:
      - country
      - name
      - videos
    CustomUser:
      type: object
      description: |-
        Inherit from base UserSerializer from Djoser.
        Added ChannelSerializer to get_fields_method.
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        channel:
          allOf:
          - $ref: '#/components/schemas/Channel'
          readOnly: true
      required:
      - channel
      - id
      - username
    CustomUserCreate:
      type: object
      description: |-
        Custom serializer for user creation. Inherited from UserCreateSerializer by Djoser.
        Added Channel instance creation in create() method.
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
        channel:
          $ref: '#/components/schemas/Channel'
      required:
      - channel
      - id
      - password
      - username
    PaginatedVideoPreviewList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/VideoPreview'
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - token
      - uid
    PatchedChannel:
      type: object
      description: Channel serializer for user creation and detail endpoints.
      properties:
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 40
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        country:
          type: string
          maxLength: 40
    PatchedCustomUser:
      type: object
      description: |-
        Inherit from base UserSerializer from Djoser.
        Added ChannelSerializer to get_fields_method.
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        channel:
          allOf:
          - $ref: '#/components/schemas/Channel'
          readOnly: true
    PatchedVideo:
      type: object
      description: Video serializer for video creation, updating and retrieving.
      properties:
        name:
          type: string
          maxLength: 100
        description:
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
        video_link:
          type: string
          format: uri
          readOnly: true
        yt_link:
          type: string
          maxLength: 255
        author_name:
          type: string
          readOnly: true
        author_link:
          type: string
          format: uri
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        likes_count:
          type: integer
          readOnly: true
        views_count:
          type: integer
          readOnly: true
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_username:
          type: string
          title: Username
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - current_password
      - new_username
    StatusEnum:
      enum:
      - PRIVATE
      - UNLISTED
      - PUBLIC
      type: string
      description: |-
        * `PRIVATE` - Private
        * `UNLISTED` - Unlisted
        * `PUBLIC` - Public
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    UsernameResetConfirm:
      type: object
      properties:
        new_username:
          type: string
          title: Username
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - new_username
    Video:
      type: object
      description: Video serializer for video creation, updating and retrieving.
      properties:
        name:
          type: string
          maxLength: 100
        description:
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
        video_link:
          type: string
          format: uri
          readOnly: true
        yt_link:
          type: string
          maxLength: 255
        author_name:
          type: string
          readOnly: true
        author_link:
          type: string
          format: uri
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        likes_count:
          type: integer
          readOnly: true
        views_count:
          type: integer
          readOnly: true
      required:
      - author_link
      - author_name
      - created_at
      - likes_count
      - name
      - video_link
      - views_count
    VideoPreview:
      type: object
      description: Video serializer for preview.
      properties:
        name:
          type: string
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
        yt_link:
          type: string
          maxLength: 255
        video_link:
          type: string
          format: uri
          readOnly: true
        views_count:
          type: integer
          readOnly: true
      required:
      - created_at
      - name
      - video_link
      - views_count
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
